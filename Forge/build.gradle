plugins {
    id 'java'
    id 'java-library'
    id 'net.neoforged.moddev.legacyforge' version '2.0.78'
}

version = "${minecraft_version}-${build_number}-FORGE"
if (System.getenv().RELEASE_MODE != "1") {
    version += '-SNAPSHOT'
}

mixin {
    add sourceSets.main, "botania.refmap.json"

    config "botania_xplat.mixins.json"
    config "botania_forge.mixins.json"
}

repositories {
    maven {
        name = "Jared"
        url = "https://maven.blamejared.com/"
    }
    maven {
        name = "C4"
        url = "https://maven.theillusivec4.top/"
    }
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/" // for emi
    }
    maven {
        name = "Unascribed"
        url "https://repo.unascribed.com" // for ears
        content {
            includeGroup "com.unascribed"
        }
    }
}

legacyForge {
    version = "1.20.1-47.1.3"
    accessTransformers = [project(':Xplat').file('src/main/resources/META-INF/accesstransformer.cfg')]

    parchment {
        minecraftVersion = '1.20.1'
        mappingsVersion = '2023.09.03'
    }

    runs {
        client {
            client()
            systemProperty('forge.logging.console.level', 'debug')
        }

        server {
            server()
            systemProperty('forge.logging.console.level', 'debug')
        }

        data {
            data()
            programArguments.addAll "-mixin.config=botania_xplat.mixins.json", "-mixin.config=botania_forge.mixins.json"
            programArguments.addAll '--mod', 'botania', '--all'
            programArguments.addAll '--output', '"' + file('src/generated/resources/').getAbsolutePath() + '"'
            programArguments.addAll '--existing', '"' + file('src/main/resources/').getAbsolutePath() + '"'
        }

        configureEach {
            gameDirectory = file('../run/')
            systemProperty('fml.earlyprogresswindow', 'false')
        }
    }

    mods {
        botania {
            sourceSet sourceSets.main
            sourceSet project(":Xplat").sourceSets.main
        }
    }
}

dependencies {
    compileOnly project(":Xplat")
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    modImplementation("vazkii.patchouli:Patchouli:${minecraft_version}-84-FORGE")
    modCompileOnly("mezz.jei:jei-1.20.1-common-api:15.2.0.27")
    modRuntimeOnly("mezz.jei:jei-1.20.1-forge:15.2.0.27")

    modCompileOnlyApi("dev.emi:emi-forge:1.0.12+${minecraft_version}")
    //modRuntimeOnly("dev.emi:emi-forge:1.1.4+${minecraft_version}")

    modCompileOnly("top.theillusivec4.curios:curios-forge:5.4.2+1.20.1:api")
    modRuntimeOnly("top.theillusivec4.curios:curios-forge:5.4.2+1.20.1")

    // modCompileOnly('com.blamejared.crafttweaker:CraftTweaker-forge-1.18.2:9.1.123')

    modCompileOnly('com.unascribed:ears-api:1.4.5')

    compileOnly "org.jetbrains:annotations:24.0.1"
}

compileJava {
    source(project(":Xplat").sourceSets.main.allSource)
    options.compilerArgs << "-Xlint:all,-classfile,-processing,-deprecation,-serial" << "-Werror"
}

sourcesJar {
    from project(":Xplat").sourceSets.main.allJava
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

processResources {
    from project(":Xplat").sourceSets.main.resources
    inputs.property "version", project.version

    filesMatching("mods.toml") {
        expand "version": project.version
    }

    from '../contributors.properties'
    // Exclude datagenerator .cache directory
    exclude '.cache'
}
jar {
    manifest {
        attributes([
                "Specification-Title": "${mod_name}",
                "Specification-Vendor": "vazkii",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": "${mod_name}",
                "Implementation-Version": "${archiveVersion.get()}",
                "Implementation-Vendor" :"vazkii",
                "MixinConfigs": "botania_xplat.mixins.json,botania_forge.mixins.json"
        ])
    }
    finalizedBy 'reobfJar'
}

task apiJar(type: Jar, dependsOn: classes) {
    // Sources included because of MinecraftForge/ForgeGradle#369
    from project(":Xplat").sourceSets.main.allJava
    from(sourceSets.main.allJava)
    from(sourceSets.main.output)

    include 'vazkii/botania/api/**'

    archiveClassifier = 'api'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            artifact jar
            artifact sourcesJar
            artifact apiJar
            pom.withXml {
                def node = asNode()
                if(node.dependencies.size() > 0)
                    node.remove(node.dependencies) // Remove deps, as they are all mappings-dependent and/or forge
            }
        }
    }
    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}
